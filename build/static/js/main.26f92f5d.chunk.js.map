{"version":3,"sources":["components/Heading.js","context/AppReducer.js","context/GlobalState.js","components/Employeelist.js","components/Home.js","components/Addemployee.js","components/Editemployee.js","App.js","index.js"],"names":["Heading","className","to","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","state","action","type","employees","filter","employee","id","payload","updatedEmployee","updatedEmployees","map","initialState","fname","lname","email","contact","status","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","removeEmployee","addEmployee","editEmployee","Employeelist","useContext","length","key","onClick","d","points","Home","Addemployee","useState","setFirstName","setLastName","setEmail","setContact","setStatus","useForm","handleSubmit","register","errors","history","useHistory","onSubmit","e","newEmployee","push","htmlFor","onChange","target","name","placeholder","ref","required","pattern","message","Editemployee","route","cotnact","selectedUser","setSeletedUser","currentUserId","match","params","useEffect","employeeId","find","emp","parseInt","handleOnChange","userKey","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26f92f5d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const Heading = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"flex items-center mt-24 mb-10\">\r\n\r\n                <div className=\"flex-grow text-right px-4 py-2 m-2\">\r\n                    <Link to=\"/add\">\r\n                        <button className=\"bg-green-400 hover:bg-green-500 text-white font-semibold py-2 px-4 rounded inline-flex items-center\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-plus-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\"></line><line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\"></line></svg>\r\n                            <span className=\"pl-2\">Add Contact</span>\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'REMOVE_EMPLOYEE':\r\n            return {\r\n                ...state,\r\n                employees: state.employees.filter(employee => employee.id !== action.payload)\r\n            };\r\n        case 'ADD_EMPLOYEES':\r\n            return {\r\n                ...state,\r\n                employees: [...state.employees, action.payload]\r\n            };\r\n        case 'EDIT_EMPLOYEE':\r\n            const updatedEmployee = action.payload;\r\n\r\n            const updatedEmployees = state.employees.map(employee => {\r\n                if (employee.id === updatedEmployee.id) {\r\n                    return updatedEmployee;\r\n                }\r\n                return employee;\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                employees: updatedEmployees\r\n            };\r\n        default: return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer'\r\n\r\nconst initialState = {\r\n    employees: [\r\n        { id: 1, fname: 'Shantanu', lname: 'B', email: 'shantanub@yopmail.com',contact: '9898659898',status: 'Active' }\r\n    ]\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    function removeEmployee(id) {\r\n        dispatch({\r\n            type: 'REMOVE_EMPLOYEE',\r\n            payload: id\r\n        });\r\n    };\r\n\r\n    function addEmployee(employees) {\r\n        dispatch({\r\n            type: 'ADD_EMPLOYEES',\r\n            payload: employees\r\n        });\r\n    };\r\n\r\n    function editEmployee(employees) {\r\n        dispatch({\r\n            type: 'EDIT_EMPLOYEE',\r\n            payload: employees\r\n        });\r\n    };\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        employees: state.employees,\r\n        removeEmployee,\r\n        addEmployee,\r\n        editEmployee\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, { Fragment, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Employeelist = () => {\r\n\r\n\r\n    const { employees, removeEmployee, editEmployee } = useContext(GlobalContext);\r\n    return (\r\n        <Fragment>\r\n            {employees.length > 0 ?\r\n                <Fragment>\r\n                    {employees.map(employee => (\r\n                        <div className=\"flex items-center bg-gray-100 mb-10 shadow\" key={employee.id}>\r\n                            <div className=\"flex-auto text-left px-4 py-2 m-2\">\r\n                                <p className=\"text-gray-900 leading-none\">{employee.fname} {employee.lname}</p>\r\n                                <p className=\"text-gray-600\">{employee.email}</p>\r\n                                <p className=\"text-gray-600\">{employee.contact}</p>\r\n                                <span className=\"inline-block text-sm font-semibold mt-1\">{employee.status}</span>\r\n                            </div>\r\n                            <div className=\"flex-auto text-right px-4 py-2 m-2\">\r\n                                <Link to={`/edit/${employee.id}`}>\r\n                                    <button onClick={() => editEmployee(employee.id)} className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold mr-3 py-2 px-4 rounded-full inline-flex items-center\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-edit\"><path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"></path><path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"></path></svg>\r\n                                    </button>\r\n                                </Link>\r\n                                <button onClick={() => removeEmployee(employee.id)} className=\"block bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold py-2 px-4 rounded-full inline-flex items-center\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"feather feather-trash-2\"><polyline points=\"3 6 5 6 21 6\"></polyline><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"></path><line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"></line><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"></line></svg>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </Fragment>\r\n                : <p className=\"text-center bg-gray-100 text-gray-500 py-5\">No data</p>}\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment } from 'react';\r\nimport { Heading } from './Heading';\r\nimport { Employeelist } from './Employeelist';\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n            <div className=\"App\">\r\n                <div className=\"container mx-auto\">\r\n                    <h3 className=\"text-center  text-3xl mt-20 text-base leading-8 text-black font-bold tracking-wide uppercase\">Manage Contacts</h3>\r\n                    <Heading />\r\n                    <Employeelist />\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment, useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const Addemployee = () => {\r\n    const [fname, setFirstName] = useState('');\r\n    const [lname, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [contact, setContact] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const { handleSubmit, register, errors } = useForm();\r\n\r\n    const { addEmployee, employees } = useContext(GlobalContext);\r\n    let history = useHistory();\r\n\r\n    const onSubmit = e => {\r\n        // e.preventDefault();\r\n        //  console.log(fname);\r\n\r\n        const newEmployee = {\r\n            id: employees.length + 1,\r\n            fname,\r\n            lname,\r\n            email,\r\n            contact,\r\n            status\r\n        }\r\n        addEmployee(newEmployee);\r\n        history.push(\"/\");\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"w-full max-w-sm container mt-20 mx-auto\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"w-full mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"fname\">\r\n                            First Name\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" value={fname} onChange={(e) => setFirstName(e.target.value)} type=\"text\" name=\"fname\" placeholder=\"Enter First Name\"\r\n            \r\n\r\n\r\n                            ref={register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[a-zA-Z](\\s?[a-zA-Z]){2,29}$/,\r\n                                    message: \"Only Letters Allowed. Min : 2 And Max : 29\"\r\n                                }\r\n                            })}\r\n\r\n                        />\r\n                        {errors.fname && errors.fname.message}\r\n                    </div>\r\n                    <div className=\"w-full  mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"lname\">\r\n                            Last Name\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" value={lname} onChange={(e) => setLastName(e.target.value)} type=\"text\" placeholder=\"Enter Last Name\"\r\n\r\n                            name=\"lname\"\r\n\r\n\r\n                            ref={register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[a-zA-Z](\\s?[a-zA-Z]){2,29}$/,\r\n                                    message: \"Only Letters Allowed. Min : 2 And Max : 29\"\r\n                                }\r\n                            })}\r\n\r\n                        />\r\n                        {errors.lname && errors.lname.message}\r\n                    </div>\r\n                    <div className=\"w-full  mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"email\">\r\n                            Email\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"Enter Email\"\r\n                            name=\"email\"\r\n                            ref={register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                    message: \"Invalid email address\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.email && errors.email.message}\r\n                    </div>\r\n                    <div className=\"w-full  mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"contact\">\r\n                            Contact\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" value={contact} onChange={(e) => setContact(e.target.value)} type=\"text\" placeholder=\"Enter Contact\" name=\"contact\"\r\n\r\n                            ref={register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[0-9]*$/,\r\n                                    message: \"Only Digits Allowed\"\r\n                                }\r\n                            })}\r\n\r\n\r\n                        />\r\n                        {errors.contact && errors.contact.message}\r\n                    </div>\r\n                    <div className=\"w-full  mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"status\">\r\n                            Status\r\n                        </label>\r\n                        <select id=\"status\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" value={status} onChange={(e) => setStatus(e.target.value)}>\r\n                            <option>Select Status</option>\r\n                            <option value=\"Active\">Active</option>\r\n                            <option value=\"Inactive\">Inactive</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <button className=\"mt-5 bg-green-400 w-full hover:bg-green-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">\r\n                            Add Employee\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"text-center mt-4 text-gray-500\"><Link to='/'>Cancel</Link></div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment, useState, useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const Editemployee = (route) => {\r\n    let history = useHistory();\r\n    const { employees, editEmployee } = useContext(GlobalContext);\r\n    const [selectedUser, setSeletedUser] = useState({ id: null, fname: '', lname: '', email: '', cotnact: '', status: '' });\r\n    const currentUserId = route.match.params.id;\r\n    const { handleSubmit, register, errors } = useForm();\r\n\r\n    useEffect(() => {\r\n        const employeeId = currentUserId;\r\n        const selectedUser = employees.find(emp => emp.id === parseInt(employeeId));\r\n        setSeletedUser(selectedUser);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const onSubmit = e => {\r\n        //e.preventDefault();\r\n        editEmployee(selectedUser);\r\n        history.push('/');\r\n    }\r\n\r\n    const handleOnChange = (userKey, value) => setSeletedUser({ ...selectedUser, [userKey]: value })\r\n\r\n    if (!selectedUser || !selectedUser.id) {\r\n        return <div>sdf</div>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"w-full max-w-sm container mt-20 mx-auto\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"w-full mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"fname\">\r\n                            First Name\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" value={selectedUser.fname} onChange={(e) => handleOnChange('fname', e.target.value)} type=\"text\" placeholder=\"First name\"\r\n\r\n                            name=\"fname\"\r\n\r\n\r\n                            ref={register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[a-zA-Z](\\s?[a-zA-Z]){2,29}$/,\r\n                                    message: \"Only Letters Allowed. Min : 2 And Max : 29\"\r\n                                }\r\n                            })}\r\n\r\n                        />\r\n                        {errors.fname && errors.fname.message}\r\n\r\n                    </div>\r\n                    <div className=\"w-full  mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"lname\">\r\n                            Last Name\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" value={selectedUser.lname} onChange={(e) => handleOnChange('lname', e.target.value)} type=\"text\" placeholder=\"Last Name\"\r\n                            name=\"lname\"\r\n\r\n\r\n                            ref={register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[a-zA-Z](\\s?[a-zA-Z]){2,29}$/,\r\n                                    message: \"Only Letters Allowed. Min : 2 And Max : 29\"\r\n                                }\r\n                            })}\r\n\r\n                        />\r\n                        {errors.lname && errors.lname.message}\r\n                    </div>\r\n                    <div className=\"w-full  mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"email\">\r\n                            Email\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" value={selectedUser.email} onChange={(e) => handleOnChange('email', e.target.value)} type=\"text\" placeholder=\"Enter Email\"\r\n                            name=\"email\"\r\n                            ref={register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                    message: \"Invalid email address\"\r\n                                }\r\n                            })}\r\n                        />\r\n                        {errors.email && errors.email.message}\r\n                    </div>\r\n                    <div className=\"w-full  mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"contact\">\r\n                            Contact\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:text-gray-600 focus:shadow-outline\" value={selectedUser.contact} onChange={(e) => handleOnChange('contact', e.target.value)} type=\"text\" placeholder=\"Enter contact\"\r\n                            name=\"contact\"\r\n\r\n                            ref={register({\r\n                                required: 'Required',\r\n                                pattern: {\r\n                                    value: /^[0-9]*$/,\r\n                                    message: \"Only Digits Allowed\"\r\n                                }\r\n                            })}\r\n\r\n\r\n                        />\r\n                        {errors.contact && errors.contact.message}\r\n                    </div>\r\n                    <div className=\"w-full  mb-5\">\r\n                        <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\" htmlFor=\"status\">\r\n                            Status\r\n                    </label>\r\n                        <select id=\"status\" className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:text-gray-600\" value={selectedUser.status} onChange={(e) => handleOnChange('status', e.target.value)}>\r\n                            <option value=\"Active\">Active</option>\r\n                            <option value=\"Inactive\">Inactive</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <button className=\"block mt-5 bg-green-400 w-full hover:bg-green-500 text-white font-bold py-2 px-4 rounded focus:text-gray-600 focus:shadow-outline\">\r\n                            Edit Contact\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"text-center mt-4 text-gray-500\"><Link to='/'>Cancel</Link></div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './stylesheet/styles.css';\r\nimport { Home } from './components/Home';\r\nimport { Addemployee } from './components/Addemployee';\r\nimport { Editemployee } from './components/Editemployee';\r\n\r\n\r\nimport { GlobalProvider } from './context/GlobalState';\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/add\" component={Addemployee} exact />\r\n        <Route path=\"/edit/:id\" component={Editemployee} exact />\r\n      </Switch>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './stylesheet/styles.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}